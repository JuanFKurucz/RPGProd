{"version":3,"sources":["components/profile/Player.tsx","components/profile/Level.tsx","components/budget/Budget.tsx","components/profile/Stat.tsx","components/profile/Stats.tsx","components/profile/index.tsx","assets/img/proficiencies/index.tsx","assets/img/proficiencies/art.png","assets/img/proficiencies/astronomy.png","assets/img/proficiencies/cad.png","assets/img/proficiencies/cooking.png","assets/img/proficiencies/crafting.png","assets/img/proficiencies/reading.png","assets/img/proficiencies/study.png","assets/img/proficiencies/working_out.png","components/proficiency/index.tsx","components/budget/index.tsx","assets/img/skills/index.tsx","assets/img/skills/intelligence.png","assets/img/skills/speed.png","assets/img/skills/strength.png","components/tasks/Task.tsx","components/tasks/Column.tsx","components/tasks/index.tsx","assets/img/quests/index.tsx","assets/img/quests/boss_fight.png","assets/img/quests/quest.png","assets/img/quests/side_quest.png","utils/markov.js","containers/AddTask.tsx","containers/AddBudget.tsx","containers/AssignBudget.tsx","components/footer/index.tsx","components/navbar/index.tsx","containers/App.tsx","index.tsx"],"names":["Player","profile","className","name","src","avatar","alt","Level","xp","level","Progress","percent","Math","round","levelPure","total","progress","color","Budget","budget","Stat","number","image","Image","size","replace","floor","Stats","stats","images","Object","keys","map","stat","Profile","Grid","container","Row","centered","columns","Column","computer","mobile","proficiencies","art","astronomy","cad","cooking","crafting","reading","study","working_out","Proficiency","toggleAssignBudgetModal","deleteBudgetType","budgetItems","item","Fragment","actual","verticalAlign","style","marginTop","Icon","onClick","skills","intelligence","speed","strength","Task","data","category","deleteTask","completeTask","changeStatusTask","status","textAlign","rewards","x","inline","width","id","taskList","prioritiesNames","1","2","3","Tasks","tasks","filter","y","priorities","Set","priority","sort","a","b","margin","padding","quests","bossFight","quest","sideQuest","seps","sample","arr","random","length","MarkovChain","order","text","t","this","beginnings","freq","addText","toLowerCase","string","words","split","s","buf","push","slice","word","key","hasOwnProperty","splice","maxWords","sentence","done","nextWord","nextWordFor","join","sentences","String","e","addSentence","values","v","find","k","AddTask","open","dimmer","toggleTaskModal","addTask","useState","inputTaskName","setInputTaskName","inputPriority","setInputPriority","inputSkill","setInputSkill","inputProficiency","setInputProficiency","useEffect","taskName","Markov","questConfig","generateSentence","cleanStates","preventDragHandler","preventDefault","Modal","onClose","basic","marginBottom","Content","Form","Field","control","placeholder","value","onChange","event","target","onFocus","select","indexOf","opacity","onDragStart","skill","newSkills","element","toggleInputSkill","toggleInputProficiency","Actions","marginLeft","marginRight","Button","negative","float","positive","AddBudget","addBudget","inputBudgetType","setInputBudgetType","inputBudget","setInputBudget","parseFloat","AssignBudget","budgetType","assignBudget","Footer","Navbar","activeItem","Segment","inverted","Menu","pointing","secondary","to","Item","active","getFromLocalStorage","defaultValue","localStorageValue","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","modalReducer","_state","action","type","Error","App","setProfile","setTasks","React","useReducer","undefined","modalState","setModalState","budgetModalState","setBudgetModalState","assignBudgetModalState","setAssignBudgetModalState","saveTasks","newTasks","saveProfile","newProfile","toggleBudgetModal","basename","path","uuidv4","startedAt","Date","now","completedAt","currentTaskIndex","findIndex","obj","forEach","index","amount","close","newProfileBudget","newProfileBudgetType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8923d1ef.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ProfileType } from '../../utils/types';\n\ntype PlayerProps = { profile: ProfileType };\n\nconst Player = ({ profile }: PlayerProps): React.ReactElement => (\n  <div className=\"centerText\">\n    <span>{profile.name || 'Player Name'}</span>\n    <br />\n    <img\n      src={\n        profile.avatar ||\n        'https://cdn1.iconfinder.com/data/icons/zeshio-s-fantasy-avatars/200/Fantasy_avatar_people-07-512.png'\n      }\n      className=\"playerPicture\"\n      alt=\"Player avatar\"\n    />\n  </div>\n);\n\nexport default Player;\n","import React from 'react';\n\nimport { Progress } from 'semantic-ui-react';\n\nimport { ProfileType } from '../../utils/types';\n\ntype LevelProps = { profile: ProfileType };\n\nconst Level = ({ profile }: LevelProps): React.ReactElement => (\n  <div className=\"centerText profileComponent\">\n    <div className=\"text-center\">\n      XP:\n      {profile.xp}\n    </div>\n    <div className=\"text-center\">\n      Level:\n      {profile.level}\n    </div>\n    <Progress\n      percent={Math.round((profile.levelPure % 1) * 100)}\n      total={5}\n      progress\n      color=\"brown\"\n    />\n  </div>\n);\n\nexport default Level;\n","import React from 'react';\n\nimport { ProfileType } from '../../utils/types';\n\ntype BudgetProps = { profile: ProfileType };\n\nconst Budget = ({ profile }: BudgetProps): React.ReactElement => (\n  <div className=\"centerText profileComponent\">Budget: ${profile.budget || 0}</div>\n);\n\nexport default Budget;\n","import React from 'react';\n\nimport { Progress, Image } from 'semantic-ui-react';\n\ntype StatProps = {\n  name: string;\n  number: number;\n  image?: string;\n  total?: number;\n};\n\nconst Stat = ({ name, number, total = 0, image = '' }: StatProps): React.ReactElement => (\n  <>\n    <div className=\"text-center categoryName\">\n      {image && <Image src={image} size=\"tiny\" className=\"taskSkillImage\" />}\n      {name.replace(/_/gi, ' ')} - Level: {Math.floor(number / total)}\n    </div>\n    <Progress percent={(number / total) * 100} progress color=\"brown\" />\n  </>\n);\n\nexport default Stat;\n","import React from 'react';\n\nimport Stat from './Stat';\n\ntype StatsProps = {\n  name: string;\n  stats: Record<string, number>;\n  images?: Record<string, string>;\n};\n\nconst Stats = ({ name, stats, images = {} }: StatsProps): React.ReactElement => (\n  <div className=\"centerText profileComponent\">\n    {name}\n    {Object.keys(stats).map((stat) => (\n      <Stat key={stat} name={stat} number={stats[stat]} image={images[stat]} total={5} />\n    ))}\n  </div>\n);\n\nexport default Stats;\n","import React from 'react';\n\nimport { Grid } from 'semantic-ui-react';\n\nimport Player from './Player';\nimport Level from './Level';\nimport Budget from '../budget/Budget';\nimport Stats from './Stats';\nimport { ProfileType } from '../../utils/types';\n\ntype ProfileProps = {\n  profile: ProfileType;\n};\n\nconst Profile = ({ profile }: ProfileProps): React.ReactElement => (\n  <section>\n    <Grid container className=\"profile\">\n      <Grid.Row centered columns={3}>\n        <Grid.Column computer={5} mobile={16}>\n          <Player profile={profile} />\n        </Grid.Column>\n        <Grid.Column computer={5} mobile={16}>\n          <Level profile={profile} />\n          <Budget profile={profile} />\n        </Grid.Column>\n        <Grid.Column computer={5} mobile={16}>\n          <Stats name=\"Stats\" stats={profile.stats} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </section>\n);\n\nexport default Profile;\n","import art from './art.png';\nimport astronomy from './astronomy.png';\nimport cad from './cad.png';\nimport cooking from './cooking.png';\nimport crafting from './crafting.png';\nimport reading from './reading.png';\nimport study from './study.png';\nimport workingOut from './working_out.png';\n\nconst proficiencies: Record<string, string> = {\n  art,\n  astronomy,\n  cad,\n  cooking,\n  crafting,\n  reading,\n  study,\n  working_out: workingOut,\n};\n\nexport default proficiencies;\n","export default __webpack_public_path__ + \"static/media/art.e031e195.png\";","export default __webpack_public_path__ + \"static/media/astronomy.9de823b6.png\";","export default __webpack_public_path__ + \"static/media/cad.25f45ea4.png\";","export default __webpack_public_path__ + \"static/media/cooking.a9d4d0f5.png\";","export default __webpack_public_path__ + \"static/media/crafting.c79b1266.png\";","export default __webpack_public_path__ + \"static/media/reading.0ccffc52.png\";","export default __webpack_public_path__ + \"static/media/study.7a781a29.png\";","export default __webpack_public_path__ + \"static/media/working_out.e37e6624.png\";","import React from 'react';\n\nimport { Grid } from 'semantic-ui-react';\n\nimport proficiencies from '../../assets/img/proficiencies';\nimport { ProfileType } from '../../utils/types';\nimport Stats from '../profile/Stats';\n\ntype ProficiencyProps = { profile: ProfileType };\n\nconst Proficiency = ({ profile }: ProficiencyProps): React.ReactElement => (\n  <section>\n    <Grid container className=\"profile\">\n      <Grid.Row centered columns={1}>\n        {profile.proficiencies && (\n          <Grid.Column computer={16} mobile={16}>\n            <Stats name=\"Proficiencies\" stats={profile.proficiencies} images={proficiencies} />\n          </Grid.Column>\n        )}\n      </Grid.Row>\n    </Grid>\n  </section>\n);\n\nexport default Proficiency;\n","import React from 'react';\n\nimport { Grid, Icon } from 'semantic-ui-react';\n\nimport { ProfileType } from '../../utils/types';\nimport Stat from '../profile/Stat';\nimport BudgetDiv from './Budget';\n\ntype BudgetProps = {\n  profile: ProfileType;\n  toggleAssignBudgetModal: (item: string) => void;\n  deleteBudgetType: (item: string) => void;\n};\n\nconst Budget = ({\n  profile,\n  toggleAssignBudgetModal,\n  deleteBudgetType,\n}: BudgetProps): React.ReactElement => (\n  <section>\n    <Grid container className=\"profile\">\n      <Grid.Row centered columns={1}>\n        <BudgetDiv profile={profile} />\n      </Grid.Row>\n      <Grid.Row centered columns={1}>\n        {profile.budgetItems &&\n          Object.keys(profile.budgetItems).map((item) => (\n            <React.Fragment key={item + 0}>\n              <Grid.Column computer={12} mobile={10} key={item}>\n                <Stat\n                  key={item + 1}\n                  name={item}\n                  number={profile.budgetItems[item].actual}\n                  total={profile.budgetItems[item].total}\n                />\n              </Grid.Column>\n              <Grid.Column\n                computer={2}\n                mobile={3}\n                key={item + 2}\n                verticalAlign=\"middle\"\n                style={{ marginTop: '2vh' }}\n              >\n                <Icon\n                  key={item + 3}\n                  name=\"money\"\n                  onClick={() => {\n                    toggleAssignBudgetModal(item);\n                  }}\n                  size=\"big\"\n                />\n              </Grid.Column>\n              <Grid.Column\n                computer={2}\n                mobile={3}\n                key={item + 4}\n                verticalAlign=\"middle\"\n                style={{ marginTop: '2vh' }}\n              >\n                <Icon\n                  key={item + 5}\n                  name=\"trash\"\n                  onClick={() => {\n                    deleteBudgetType(item);\n                  }}\n                  size=\"big\"\n                />\n              </Grid.Column>\n            </React.Fragment>\n          ))}\n      </Grid.Row>\n    </Grid>\n  </section>\n);\n\nexport default Budget;\n","import intelligence from './intelligence.png';\nimport speed from './speed.png';\nimport strength from './strength.png';\n\nconst skills: Record<string, string> = {\n  intelligence,\n  speed,\n  strength,\n};\n\nexport default skills;\n","export default __webpack_public_path__ + \"static/media/intelligence.470883d7.png\";","export default __webpack_public_path__ + \"static/media/speed.34169805.png\";","export default __webpack_public_path__ + \"static/media/strength.9247417f.png\";","import React from 'react';\n\nimport { Icon, Image, Grid } from 'semantic-ui-react';\n\nimport skills from '../../assets/img/skills';\nimport proficiencies from '../../assets/img/proficiencies';\n\nimport {\n  TaskType,\n  DeleteTaskType,\n  CompleteTaskType,\n  ChangeStatusTaskType,\n} from '../../utils/types';\n\ntype TaskProps = {\n  data: TaskType;\n  category?: string;\n  deleteTask: DeleteTaskType;\n  completeTask: CompleteTaskType;\n  changeStatusTask: ChangeStatusTaskType;\n};\n\nconst Task = ({\n  data,\n  category = '',\n  deleteTask,\n  completeTask,\n  changeStatusTask,\n}: TaskProps): React.ReactElement => (\n  <div className={`centerText taskComponent task${data.status}`}>\n    <Grid centered>\n      <Grid.Row centered columns={3} textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Column centered computer={3} mobile={3} className=\"gridColumnTask\">\n          {data.rewards &&\n            data.rewards.map((x) => (\n              <Image\n                key={x}\n                verticalAlign=\"middle\"\n                src={skills[x]}\n                size=\"mini\"\n                className=\"invert\"\n                inline\n                style={{ width: '2em' }}\n              />\n            ))}\n          {data.proficiencies &&\n            data.proficiencies.map((x) => (\n              <Image\n                key={x}\n                verticalAlign=\"middle\"\n                src={proficiencies[x]}\n                size=\"mini\"\n                inline\n                style={{ width: '2em' }}\n              />\n            ))}\n        </Grid.Column>\n        <Grid.Column computer={7} mobile={7} className=\"gridColumnTask\">\n          {category && <span className=\"categoryName\">{category}</span>}\n          {data.name}\n        </Grid.Column>\n        <Grid.Column width={5} className=\"gridColumnTask\">\n          <Grid centered container>\n            <Grid.Row centered columns={3}>\n              {data.status !== 'completed' && (\n                <Grid.Column>\n                  {data.status !== 'idle' && (\n                    <Icon\n                      name=\"pause\"\n                      onClick={() => {\n                        changeStatusTask(data.id, 'idle');\n                      }}\n                    />\n                  )}\n                  {data.status === 'idle' && (\n                    <Icon\n                      name=\"play\"\n                      onClick={() => {\n                        changeStatusTask(data.id, 'inprogress');\n                      }}\n                    />\n                  )}\n                </Grid.Column>\n              )}\n              {data.status !== 'completed' && (\n                <Grid.Column>\n                  <Icon\n                    name=\"check\"\n                    onClick={() => {\n                      completeTask(data.id);\n                    }}\n                  />\n                </Grid.Column>\n              )}\n              <Grid.Column>\n                <Icon\n                  name=\"trash\"\n                  onClick={() => {\n                    deleteTask(data.id);\n                  }}\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </div>\n);\n\nexport default Task;\n","import React from 'react';\n\nimport Task from './Task';\nimport {\n  TaskType,\n  DeleteTaskType,\n  CompleteTaskType,\n  ChangeStatusTaskType,\n} from '../../utils/types';\n\ntype ColumnProps = {\n  name: string;\n  taskList: Array<TaskType>;\n  deleteTask: DeleteTaskType;\n  completeTask: CompleteTaskType;\n  changeStatusTask: ChangeStatusTaskType;\n};\n\nconst Column = ({\n  name,\n  taskList,\n  deleteTask,\n  completeTask,\n  changeStatusTask,\n}: ColumnProps): React.ReactElement => (\n  <div className=\"taskColumn\">\n    <div className=\"categoryName\">{name}</div>\n    {taskList.map((x) => (\n      <Task\n        key={x.id}\n        data={x}\n        deleteTask={deleteTask}\n        completeTask={completeTask}\n        changeStatusTask={changeStatusTask}\n      />\n    ))}\n  </div>\n);\n\nexport default Column;\n","import React from 'react';\n\nimport { Grid } from 'semantic-ui-react';\n\nimport {\n  TaskType,\n  DeleteTaskType,\n  CompleteTaskType,\n  ChangeStatusTaskType,\n} from '../../utils/types';\nimport Column from './Column';\n\ntype TasksProps = {\n  taskList: Array<TaskType>;\n  deleteTask: DeleteTaskType;\n  completeTask: CompleteTaskType;\n  changeStatusTask: ChangeStatusTaskType;\n};\n\nconst prioritiesNames: Record<number, string> = {\n  1: 'Side quest',\n  2: 'Quest',\n  3: 'Boss fight',\n};\n\nconst Tasks = ({\n  taskList,\n  deleteTask,\n  completeTask,\n  changeStatusTask,\n}: TasksProps): React.ReactElement => {\n  const tasks = taskList.filter((y) => y.status !== 'completed');\n  const priorities: number[] = [...new Set(tasks.map((x) => x.priority))];\n  priorities.sort((a: number, b: number) => b - a);\n  return (\n    <section>\n      <div className=\"tasks\">\n        <Grid style={{ margin: 0, padding: 0 }}>\n          <Grid.Row centered columns={3} textAlign=\"center\" verticalAlign=\"top\">\n            {priorities.map((x) => (\n              <Grid.Column computer={5} mobile={16} style={{ margin: 0, padding: 0 }}>\n                <Column\n                  key={x}\n                  name={prioritiesNames[x]}\n                  taskList={tasks.filter((y) => y.priority === x)}\n                  deleteTask={deleteTask}\n                  completeTask={completeTask}\n                  changeStatusTask={changeStatusTask}\n                />\n              </Grid.Column>\n            ))}\n          </Grid.Row>\n        </Grid>\n      </div>\n    </section>\n  );\n};\n\nexport default Tasks;\n","import bossFight from './boss_fight.png';\nimport quest from './quest.png';\nimport sideQuest from './side_quest.png';\n\nconst quests: Record<string, string> = {\n  bossFight,\n  quest,\n  sideQuest,\n};\n\nexport default quests;\n","export default __webpack_public_path__ + \"static/media/boss_fight.ce57ecfd.png\";","export default __webpack_public_path__ + \"static/media/quest.71180bbd.png\";","export default __webpack_public_path__ + \"static/media/side_quest.57f8ddd7.png\";","/* eslint-disable */\n\n// define some sentence separators\nconst seps = /[.!?;:]/;\n\n/**\n * sample is a function that picks a random element from an array\n * @param {any[]} arr\n */\nfunction sample(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nclass MarkovChain {\n  /**\n   * @param {number} order\n   */\n  constructor(order, text) {\n    /**\n     * \"order\" is the \"memory\" of the Markov chain. For example, with\n     * an order of 2, the likelihood of a word appearing is based on the\n     * previous 2 words\n     * @type {number}\n     */\n    this.order = order;\n\n    /**\n     * The array storing all the beginnings of sentences in our text sample.\n     * One of these will be chosen at random to start the generated sentence.\n     * @type {string[][]}\n     */\n    this.beginnings = [];\n\n    /**\n     * A dictionary of frequencies for different word combinations. Each key\n     * is a sentence fragment of `order` length, and the value is an array of\n     * words that come after that sentence fragment.\n     */\n    this.freq = {};\n\n    for (let t in text) {\n      this.addText(text[t].toLowerCase());\n    }\n  }\n\n  /**\n   * Adds a sentence to the chain. This adds the beginning of the sentence to\n   * this.beginnings and adds frequencies/probabilities to this.freq\n   * @param {string} string\n   */\n  addSentence(string) {\n    // split the passed sentence into words and filter out excess spaces/empty slots\n    const words = string\n      .split(' ')\n      .filter((s) => s !== \"'\")\n      .filter((s) => s !== ' ')\n      .filter((s) => s !== '');\n\n    /**\n     * Initialise a buffer. This buffer will be moved along the sentence kind\n     * of like a filmstrip, looking at only `order + 1` words at a time:\n     *\n     * This is [a sentence with] the buffer illustrated\n     *\n     */\n    const buf = [];\n\n    // If the sentence is shorter than the order then we must return\n    if (words.length <= this.order) {\n      return;\n    }\n\n    // Add the beginning of this sentence to the chain's beginnings\n    this.beginnings.push(words.slice(0, this.order + 1));\n\n    for (let word of words) {\n      buf.push(word);\n      if (buf.length === this.order + 1) {\n        const key = `${buf[0]} ${buf[buf.length - 2]}`;\n        if (this.freq.hasOwnProperty(key)) {\n          this.freq[key].push(buf[buf.length - 1]);\n        } else {\n          this.freq[key] = [buf[buf.length - 1]];\n        }\n\n        /**\n         * Remove the first word from the beginning of the array to move\n         * the buffer forward\n         */\n        buf.splice(0, 1);\n      }\n    }\n  }\n\n  /**\n   * Runs through the Markov chain to generate a sentence\n   */\n  generateSentence(maxWords = 100) {\n    // Sample the beginnings and make a copy to begin our sentence.\n    const sentence = sample(this.beginnings).slice();\n\n    // Choose a random fragment of puncutation to end the sentence with.\n\n    // Set a flag for us to check when we've exhausted our sentence options.\n    let done = false;\n\n    while (!done) {\n      // Pick the two most recent words\n      const words = [sentence[sentence.length - 2], sentence[sentence.length - 1]];\n\n      // Grab the next word following the previous two\n      const nextWord = this.nextWordFor(words);\n\n      if (!nextWord.done) {\n        // If the sentence isn't finished, push the result to the end of the sentence\n        sentence.push(nextWord.word);\n      } else {\n        // Otherwise, we're finished!\n        done = true;\n      }\n      if (sentence.length >= maxWords) {\n        done = true;\n      }\n    }\n\n    // Return the completed sentence.\n    return sentence.join(' ');\n  }\n\n  /**\n   * nextWordFor takes two words and returns the next word (chosen at random, with\n   * more-commonly appearing words being more likely to be chosen)\n   *\n   * @param {string[]} words\n   */\n  nextWordFor(words) {\n    const [a, b] = words;\n    const key = `${a} ${b}`;\n    if (this.freq.hasOwnProperty(key)) {\n      return {\n        word: sample(this.freq[key]),\n        done: false,\n      };\n    } else {\n      return {\n        done: true,\n      };\n    }\n  }\n\n  addText(text) {\n    const sentences = String(text)\n      // strip newlines\n      .replace(/\\n/g, ' ')\n      .replace(/<[^>]*>?/gm, '')\n      .replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, '')\n      // split into sentences\n      .split(seps)\n      // filter out empty strings\n      .filter((e) => e !== '');\n    for (let sentence of sentences) {\n      this.addSentence(sentence);\n    }\n  }\n\n  sampleFrequencies() {\n    const key = sample(Object.keys(this.freq));\n\n    return `${key}: ${this.freq[key]}`;\n  }\n\n  getLongestChain() {\n    const values = Object.values(this.freq).sort((a, b) => b.length - a.length);\n    const key = Object.keys(this.freq).find((k) => this.freq[k] === values[0]);\n    let v = {};\n\n    v[key] = values[0];\n\n    return v;\n  }\n\n  getFrequencies() {\n    return this.freq;\n  }\n\n  getBeginnings() {\n    return this.beginnings;\n  }\n}\n\nexport default MarkovChain;\n","import React, {\n  useState,\n  useEffect,\n  ReactElement,\n  DragEvent,\n  ChangeEvent,\n  FocusEvent,\n} from 'react';\n\nimport { Button, Modal, Form, Image, Grid } from 'semantic-ui-react';\n\nimport questConfig from '../assets/config/quests.json';\nimport quests from '../assets/img/quests';\nimport skills from '../assets/img/skills';\nimport proficiencies from '../assets/img/proficiencies';\nimport Markov from '../utils/markov';\n\ntype AddTaskProps = {\n  open: boolean;\n  dimmer?: string;\n  toggleTaskModal: () => void;\n  addTask: (\n    inputTaskName: string,\n    inputPriority: number,\n    inputSkill: string[],\n    inputProficiency: string[]\n  ) => void;\n};\n\nconst AddTask = ({ open, dimmer, toggleTaskModal, addTask }: AddTaskProps): ReactElement => {\n  const [inputTaskName, setInputTaskName] = useState<string>('');\n  const [inputPriority, setInputPriority] = useState<number>(1);\n  const [inputSkill, setInputSkill] = useState<string[]>([]);\n  const [inputProficiency, setInputProficiency] = useState<string[]>([]);\n\n  const cleanStates = () => {\n    const taskName = new Markov(2, questConfig).generateSentence(7);\n    setInputTaskName(taskName);\n    setInputPriority(1);\n    setInputSkill([]);\n    setInputProficiency([]);\n  };\n\n  const toggleInputSkill = (skill: string): void => {\n    let newSkills: string[] = [];\n    if (inputSkill.indexOf(skill) !== -1) {\n      newSkills = inputSkill.filter((element) => element !== skill);\n    } else {\n      newSkills = [...inputSkill, skill];\n    }\n    setInputSkill(newSkills);\n  };\n  const toggleInputProficiency = (skill: string) => {\n    let newSkills = [];\n    if (inputProficiency.indexOf(skill) !== -1) {\n      newSkills = inputProficiency.filter((element) => element !== skill);\n    } else {\n      newSkills = [...inputProficiency, skill];\n    }\n    setInputProficiency(newSkills);\n  };\n\n  useEffect(() => {\n    if (open) {\n      cleanStates();\n    }\n  }, [open]);\n\n  const preventDragHandler = (e: DragEvent) => {\n    e.preventDefault();\n  };\n  return (\n    <Modal\n      dimmer={dimmer}\n      open={open}\n      onClose={() => {\n        toggleTaskModal();\n      }}\n      size=\"mini\"\n      basic\n      centered\n      style={{ marginTop: 0, marginBottom: 0 }}\n    >\n      <Modal.Content>\n        <h2 className=\"centerText\">Add quest</h2>\n        <Form>\n          <Grid centered columns={1} container>\n            <Grid.Row centered columns={3}>\n              <Form.Field\n                control=\"input\"\n                placeholder=\"Quest name\"\n                value={inputTaskName}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  setInputTaskName(event.target.value)\n                }\n                onFocus={(event: FocusEvent<HTMLInputElement>) => event.target.select()}\n              />\n            </Grid.Row>\n            <Grid.Row centered columns={3}>\n              Quest Type\n              <br />\n              {quests &&\n                Object.keys(quests).map((key) => (\n                  <Grid.Column key={key}>\n                    <Image\n                      key={key}\n                      src={quests[key]}\n                      size=\"tiny\"\n                      onClick={() => setInputPriority(Object.keys(quests).indexOf(key) + 1)}\n                      className=\"taskSkillImage\"\n                      style={{\n                        opacity: inputPriority === Object.keys(quests).indexOf(key) + 1 ? 1 : 0.5,\n                      }}\n                      onDragStart={preventDragHandler}\n                    />\n                  </Grid.Column>\n                ))}\n            </Grid.Row>\n            <Grid.Row centered columns={3}>\n              Quest rewards\n              <br />\n              {skills &&\n                Object.keys(skills).map((key) => (\n                  <Grid.Column key={key}>\n                    <Image\n                      key={key}\n                      src={skills[key]}\n                      size=\"tiny\"\n                      onClick={() => toggleInputSkill(key)}\n                      className=\"taskSkillImage\"\n                      style={{\n                        opacity: inputSkill.indexOf(key) !== -1 ? 1 : 0.5,\n                      }}\n                      onDragStart={preventDragHandler}\n                    />\n                  </Grid.Column>\n                ))}\n            </Grid.Row>\n            <Grid.Row centered columns={4}>\n              Quest proficiencies\n              <br />\n              {proficiencies &&\n                Object.keys(proficiencies).map((image) => (\n                  <Grid.Column centered key={image}>\n                    <Image\n                      key={image}\n                      src={proficiencies[image]}\n                      size=\"tiny\"\n                      onClick={() => toggleInputProficiency(image)}\n                      className=\"taskSkillImage taskSkillProficiency\"\n                      style={{\n                        opacity: inputProficiency.indexOf(image) !== -1 ? 1 : 0.5,\n                      }}\n                      onDragStart={preventDragHandler}\n                    />\n                  </Grid.Column>\n                ))}\n            </Grid.Row>\n          </Grid>\n          <Modal.Actions>\n            <Grid.Row centered columns={3}>\n              <Grid.Column\n                centered\n                style={{ textAlign: 'center', marginLeft: '2vw', marginRight: '2vw' }}\n              >\n                <Button\n                  negative\n                  onClick={() => {\n                    toggleTaskModal();\n                  }}\n                  style={{ float: 'left' }}\n                >\n                  Close\n                </Button>\n                <Button\n                  positive\n                  onClick={() =>\n                    addTask(inputTaskName, inputPriority, inputSkill, inputProficiency)\n                  }\n                  style={{ float: 'right' }}\n                >\n                  Add quest\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Modal.Actions>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default AddTask;\n","import React, { useState, useEffect, ReactElement, ChangeEvent, FocusEvent } from 'react';\n\nimport { Button, Modal, Form, Grid } from 'semantic-ui-react';\n\ntype AddBudgetProps = {\n  open: boolean;\n  dimmer?: string;\n  toggleTaskModal: () => void;\n  addBudget: (type: string, budget: number) => void;\n};\n\nconst AddBudget = ({ open, dimmer, toggleTaskModal, addBudget }: AddBudgetProps): ReactElement => {\n  const [inputBudgetType, setInputBudgetType] = useState<string>('');\n  const [inputBudget, setInputBudget] = useState<number>(0);\n\n  const cleanStates = () => {\n    setInputBudget(0);\n    setInputBudgetType('');\n  };\n\n  useEffect(() => {\n    if (open) {\n      cleanStates();\n    }\n  }, [open]);\n\n  return (\n    <Modal\n      dimmer={dimmer}\n      open={open}\n      onClose={() => {\n        toggleTaskModal();\n      }}\n      size=\"mini\"\n      basic\n      centered\n      style={{ marginTop: 0, marginBottom: 0 }}\n    >\n      <Modal.Content>\n        <h2 className=\"centerText\">Add budget</h2>\n        <Form>\n          <Grid centered columns={1} container>\n            <Grid.Row centered columns={3}>\n              <Form.Field\n                control=\"input\"\n                placeholder=\"Budget type (leave empty for general budget)\"\n                value={inputBudgetType}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  setInputBudgetType(event.target.value)\n                }\n                onFocus={(event: FocusEvent<HTMLInputElement>) => event.target.select()}\n              />\n            </Grid.Row>\n            <Grid.Row centered columns={3}>\n              <Form.Field\n                control=\"input\"\n                placeholder=\"Amount\"\n                value={inputBudget}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  setInputBudget(event.target.value ? parseFloat(event.target.value) : 0)\n                }\n                onFocus={(event: FocusEvent<HTMLInputElement>) => event.target.select()}\n              />\n            </Grid.Row>\n          </Grid>\n          <Modal.Actions>\n            <Grid.Row centered columns={3}>\n              <Grid.Column\n                centered\n                style={{ textAlign: 'center', marginLeft: '2vw', marginRight: '2vw' }}\n              >\n                <Button\n                  negative\n                  onClick={() => {\n                    toggleTaskModal();\n                  }}\n                  style={{ float: 'left' }}\n                >\n                  Close\n                </Button>\n                <Button\n                  positive\n                  onClick={() => addBudget(inputBudgetType, inputBudget)}\n                  style={{ float: 'right' }}\n                >\n                  Add budget\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Modal.Actions>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default AddBudget;\n","import React, { useState, useEffect, ReactElement, ChangeEvent, FocusEvent } from 'react';\n\nimport { Button, Modal, Form, Grid } from 'semantic-ui-react';\n\ntype AssignBudgetProps = {\n  open: boolean;\n  dimmer?: string;\n  budgetType?: string;\n  toggleTaskModal: (item?: string) => void;\n  assignBudget: (budgetType: string, budget: number) => void;\n};\n\nconst AssignBudget = ({\n  open,\n  dimmer,\n  budgetType,\n  toggleTaskModal,\n  assignBudget,\n}: AssignBudgetProps): ReactElement => {\n  const [inputBudget, setInputBudget] = useState<number>(0);\n\n  const cleanStates = () => {\n    setInputBudget(0);\n  };\n\n  useEffect(() => {\n    if (open) {\n      cleanStates();\n    }\n  }, [open]);\n\n  return (\n    <Modal\n      dimmer={dimmer}\n      open={open}\n      onClose={() => {\n        toggleTaskModal();\n      }}\n      size=\"mini\"\n      basic\n      centered\n      style={{ marginTop: 0, marginBottom: 0 }}\n    >\n      <Modal.Content>\n        <h2 className=\"centerText\">Assign budget to {budgetType}</h2>\n        <Form>\n          <Grid centered columns={1} container>\n            <Grid.Row centered columns={3}>\n              <Form.Field\n                control=\"input\"\n                placeholder=\"Quest name\"\n                value={inputBudget}\n                onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                  setInputBudget(parseFloat(event.target.value))\n                }\n                onFocus={(event: FocusEvent<HTMLInputElement>) => event.target.select()}\n              />\n            </Grid.Row>\n          </Grid>\n          <Modal.Actions>\n            <Grid.Row centered columns={3}>\n              <Grid.Column\n                centered\n                style={{ textAlign: 'center', marginLeft: '2vw', marginRight: '2vw' }}\n              >\n                <Button\n                  negative\n                  onClick={() => {\n                    toggleTaskModal();\n                  }}\n                  style={{ float: 'left' }}\n                >\n                  Close\n                </Button>\n                <Button\n                  positive\n                  onClick={() => assignBudget(budgetType || '', inputBudget)}\n                  style={{ float: 'right' }}\n                >\n                  Assign budget\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Modal.Actions>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default AssignBudget;\n","import React from 'react';\n\nimport { Icon } from 'semantic-ui-react';\n\ntype FooterProps = { toggleTaskModal: () => void };\n\nconst Footer = ({ toggleTaskModal }: FooterProps): React.ReactElement => (\n  <Icon name=\"add circle\" onClick={toggleTaskModal} className=\"addTaskIcon\" size=\"huge\" />\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport { Menu, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\ntype NavbarProps = { activeItem?: string };\n\nconst Navbar = ({ activeItem }: NavbarProps): React.ReactElement => (\n  <Segment inverted>\n    <Menu inverted pointing secondary>\n      <Link to=\"/\">\n        <Menu.Item name=\"profile\" active={activeItem === 'profile'} />\n      </Link>\n      <Link to=\"/quests\">\n        <Menu.Item name=\"quests\" active={activeItem === 'quests'} />\n      </Link>\n      <Link to=\"/proficiency\">\n        <Menu.Item name=\"proficiency\" active={activeItem === 'proficiency'} />\n      </Link>\n      <Link to=\"/budget\">\n        <Menu.Item name=\"budget\" active={activeItem === 'budget'} />\n      </Link>\n    </Menu>\n  </Segment>\n);\n\nexport default Navbar;\n","import React, { useState, Reducer, ReactElement } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Profile from '../components/profile';\nimport Proficiency from '../components/proficiency';\nimport Budget from '../components/budget';\nimport Tasks from '../components/tasks';\nimport AddTask from './AddTask';\nimport AddBudget from './AddBudget';\nimport AssignBudget from './AssignBudget';\nimport Footer from '../components/footer';\nimport Navbar from '../components/navbar';\nimport { TaskType, ProfileType } from '../utils/types';\n\nconst getFromLocalStorage = (key: string, defaultValue: unknown) => {\n  const localStorageValue = localStorage.getItem(key);\n  return localStorageValue ? JSON.parse(localStorageValue) : defaultValue;\n};\n\nconst saveToLocalStorage = (key: string, data: unknown) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nconst modalReducer: Reducer<\n  { open: boolean; dimmer?: string; item?: string },\n  { type: string; dimmer?: string; item?: string }\n> = (_state, action) => {\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      return { open: true, dimmer: action.dimmer, item: action.item };\n    case 'CLOSE_MODAL':\n      return { open: false, item: action.item };\n    default:\n      throw new Error();\n  }\n};\n\nconst getTasks = () => getFromLocalStorage('tasks', []);\nconst getProfile = () =>\n  getFromLocalStorage('profile', {\n    name: 'Niekto',\n    avatar: null,\n    level: 1,\n    levelPure: 1,\n    xp: 0,\n    budget: 0,\n    budgetItems: {},\n    stats: {\n      strength: 0,\n      speed: 0,\n      intelligence: 0,\n    },\n    proficiencies: {},\n  });\n\nconst App = (): ReactElement => {\n  const [profile, setProfile] = useState<ProfileType>(getProfile());\n  const [tasks, setTasks] = useState<TaskType[]>(getTasks());\n  const [modalState, setModalState] = React.useReducer(modalReducer, {\n    open: false,\n    dimmer: undefined,\n  });\n  const [budgetModalState, setBudgetModalState] = React.useReducer(modalReducer, {\n    open: false,\n    dimmer: undefined,\n  });\n  const [assignBudgetModalState, setAssignBudgetModalState] = React.useReducer(modalReducer, {\n    open: false,\n    dimmer: undefined,\n    item: undefined,\n  });\n\n  const saveTasks = (newTasks: TaskType[]) => {\n    saveToLocalStorage('tasks', newTasks);\n    setTasks(newTasks);\n  };\n\n  const saveProfile = (newProfile: ProfileType) => {\n    saveToLocalStorage('profile', newProfile);\n    setProfile(newProfile);\n  };\n\n  const toggleTaskModal = () => {\n    setModalState({\n      type: modalState.open ? 'CLOSE_MODAL' : 'OPEN_MODAL',\n      dimmer: 'blurring',\n    });\n  };\n\n  const toggleBudgetModal = () => {\n    setBudgetModalState({\n      type: budgetModalState.open ? 'CLOSE_MODAL' : 'OPEN_MODAL',\n      dimmer: 'blurring',\n    });\n  };\n\n  const toggleAssignBudgetModal = (item = '') => {\n    setAssignBudgetModalState({\n      type: assignBudgetModalState.open ? 'CLOSE_MODAL' : 'OPEN_MODAL',\n      dimmer: 'blurring',\n      item,\n    });\n  };\n\n  const addTask = (\n    inputTaskName: string,\n    inputPriority: number,\n    inputSkill: string[],\n    inputProficiency: string[]\n  ) => {\n    const newTasks = [...tasks];\n    const id = uuidv4();\n    newTasks.push({\n      id,\n      name: inputTaskName,\n      category: 'global',\n      status: 'idle',\n      startedAt: Date.now(),\n      completedAt: undefined,\n      priority: inputPriority,\n      rewards: inputSkill,\n      proficiencies: inputProficiency,\n    });\n    saveTasks(newTasks);\n    toggleTaskModal();\n  };\n\n  const addBudget = (type: string, amount: number) => {\n    const newProfile = { ...profile };\n    let close = true;\n    if (type) {\n      newProfile.budgetItems[type] = { actual: 0, total: amount };\n    } else {\n      const newProfileBudget = newProfile.budget + amount;\n      if (newProfileBudget >= 0) {\n        newProfile.budget += amount;\n      } else {\n        close = false;\n      }\n    }\n    if (close) {\n      saveProfile(newProfile);\n      toggleBudgetModal();\n    }\n  };\n\n  const assignBudget = (type: string, amount: number) => {\n    if (type) {\n      const newProfile = { ...profile };\n      const newProfileBudget = newProfile.budget + amount;\n      const newProfileBudgetType = newProfile.budgetItems[type].actual + amount;\n      if (newProfileBudget >= 0 && newProfileBudgetType >= 0) {\n        newProfile.budget -= amount;\n        newProfile.budgetItems[type].actual += amount;\n        saveProfile(newProfile);\n        toggleAssignBudgetModal();\n      }\n    }\n  };\n\n  const deleteBudgetType = (item: string) => {\n    const newProfile = { ...profile };\n    delete newProfile.budgetItems[item];\n    saveProfile(newProfile);\n  };\n\n  const deleteTask = (id: string) => {\n    const newTasks = tasks.filter((element) => element.id !== id);\n    saveTasks(newTasks);\n  };\n\n  const completeTask = (id: string) => {\n    const newTasks = [...tasks];\n    const currentTaskIndex = newTasks.findIndex((obj) => obj.id === id);\n    newTasks[currentTaskIndex].completedAt = Date.now();\n    newTasks[currentTaskIndex].status = 'completed';\n    saveTasks(newTasks);\n\n    const newProfile = { ...profile };\n    newProfile.xp += Math.floor(Math.random() * 10) * newTasks[currentTaskIndex].priority;\n    newProfile.levelPure += newProfile.xp / (120 * newProfile.level);\n    newProfile.level = Math.floor(newProfile.levelPure);\n    newTasks[currentTaskIndex].rewards.forEach((value) => {\n      newProfile.stats[value] += 1;\n    });\n    newTasks[currentTaskIndex].proficiencies.forEach((value) => {\n      if (!(value in newProfile.proficiencies)) {\n        newProfile.proficiencies[value] = 0;\n      }\n      newProfile.proficiencies[value] += 1;\n    });\n    saveProfile(newProfile);\n  };\n\n  const changeStatusTask = (id: string, status: string) => {\n    const newTasks = [...tasks];\n    const index = newTasks.findIndex((obj) => obj.id === id);\n    newTasks[index].status = status;\n    saveTasks(newTasks);\n  };\n\n  return (\n    <HashRouter basename=\"/\">\n      <header>\n        <Navbar />\n      </header>\n      <Switch>\n        <Route path=\"/quests\">\n          <AddTask\n            open={modalState.open}\n            dimmer={modalState.dimmer}\n            toggleTaskModal={toggleTaskModal}\n            addTask={addTask}\n          />\n          <Tasks\n            taskList={tasks}\n            deleteTask={deleteTask}\n            completeTask={completeTask}\n            changeStatusTask={changeStatusTask}\n          />\n          {!modalState.open && <Footer toggleTaskModal={toggleTaskModal} />}\n        </Route>\n        <Route path=\"/proficiency\">\n          <Proficiency profile={profile} />\n        </Route>\n        <Route path=\"/budget\">\n          <AddBudget\n            open={budgetModalState.open}\n            dimmer={budgetModalState.dimmer}\n            toggleTaskModal={toggleBudgetModal}\n            addBudget={addBudget}\n          />\n          <AssignBudget\n            open={assignBudgetModalState.open}\n            dimmer={assignBudgetModalState.dimmer}\n            toggleTaskModal={toggleAssignBudgetModal}\n            budgetType={assignBudgetModalState.item}\n            assignBudget={assignBudget}\n          />\n          <Budget\n            profile={profile}\n            toggleAssignBudgetModal={toggleAssignBudgetModal}\n            deleteBudgetType={deleteBudgetType}\n          />\n          {!budgetModalState.open && <Footer toggleTaskModal={toggleBudgetModal} />}\n        </Route>\n        <Route path=\"/\">\n          <Profile profile={profile} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './assets/styles/index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}